whats called time complexity

Time complexity is a computational complexity that describes the amount of time it takes to run an algorithm as a function of the length of the input.
it is dependent on the input size and the number of operations performed by the algorithm.
it is used to analyze the performance of an algorithm and to compare the efficiency of different algorithms.
it is usually expressed using Big O notation, which describes the upper bound of the time complexity.

what is space complexity

Space complexity is a computational complexity that describes the amount of memory space required by an algorithm as a function of the length of the input.
it is dependent on the input size and the amount of memory required by the algorithm to execute.
it is used to analyze the memory usage of an algorithm and to compare the efficiency of different algorithms.
it is usually expressed using Big O notation, which describes the upper bound of the space complexity.


what is big O notation(worst case)

Big O notation is a mathematical notation used to describe the upper bound of the time or space complexity of an algorithm.
It provides a high-level understanding of the algorithm's efficiency and helps in comparing different algorithms.


eg:

for(int i=0;i<n;i++)
{
    cout<<i<<endl;
}
the above code has a time complexity of O(n) because it runs in linear time with respect to the input size n.

Rules:
        computed in terms of worst case scenarios 
        avoid constants
        avoid lower values



big O- worst case
theta- average case
omega- best case

